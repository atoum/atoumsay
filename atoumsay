#!/bin/bash

if [ ! -z "$1" ]
then
    if [ $(echo $1 | grep -e '^\-') ]
    then
        NAME=$1

        if [ -n "$2" ]
        then
            SAY=$2
        fi
    else
        SAY=$1

        if [ $(echo $2 | grep -e '^\-') ]
        then
            NAME=$2
        fi
    fi
fi

[ -z "$NAME" ] && NAME='-b'
[ -z "$SAY" ] && SAY="atoum - the simple, modern and intuitive unit testing framework for PHP 5.3+"

case $NAME in
'-b')
    NAME='BLUE'
    ;;
'-r')
    NAME='RED'
    ;;
'-g')
    NAME='GREEN'
    ;;
*)
    NAME='BLUE'
    ;;
esac

RESET="[0m"
BLUE=("[48;5;16m" "[48;5;231m" "[48;5;250m" "[48;5;240m" "[48;5;153m" "[48;5;111m" "[48;5;68m")
# 83 / 34
GREEN=("[48;5;16m" "[48;5;231m" "[48;5;120m" "[48;5;34m" "[48;5;157m" "[48;5;120m" "[48;5;83m") 
RED=("[48;5;16m" "[48;5;231m" "[48;5;211m" "[48;5;124m" "[48;5;218m" "[48;5;204m" "[48;5;197m")

THEME=($(eval "echo \${${NAME}[0]}") $(eval "echo \${${NAME}[1]}") $(eval "echo \${${NAME}[2]}") $(eval "echo \${${NAME}[3]}") $(eval "echo \${${NAME}[4]}") $(eval "echo \${${NAME}[5]}") $(eval "echo \${${NAME}[6]}"))

ATOUM=$(cat <<EOF
              ${THEME[0]}  ${RESET}                                 ${THEME[0]}  ${RESET}
            ${THEME[0]}    ${RESET}                                 ${THEME[0]}   ${RESET}
            ${THEME[0]}  ${THEME[1]} ${THEME[2]} ${THEME[0]}  ${RESET}                             ${THEME[0]}  ${THEME[2]} ${THEME[1]} ${THEME[0]} ${RESET}
            ${THEME[0]}  ${THEME[1]} ${THEME[2]}   ${THEME[0]}                             ${THEME[2]}   ${THEME[1]} ${THEME[0]} ${RESET}
            ${THEME[0]}  ${THEME[1]} ${THEME[2]}            ${THEME[0]}  ${THEME[4]} ${THEME[4]} ${THEME[4]} ${THEME[4]} ${THEME[4]} ${THEME[4]} ${THEME[4]} ${THEME[0]}  ${THEME[2]}            ${THEME[1]} ${THEME[0]} ${RESET}
            ${THEME[0]}  ${THEME[3]}           ${THEME[0]}  ${THEME[4]} ${THEME[5]}         ${THEME[4]} ${THEME[0]}  ${THEME[3]}           ${THEME[0]} ${RESET}
              ${THEME[0]}           ${THEME[4]} ${THEME[5]}             ${THEME[4]} ${THEME[0]}           ${RESET}
                      ${RESET} ${THEME[0]}  ${THEME[4]} ${THEME[5]}             ${THEME[4]} ${THEME[0]}  ${RESET}
                      ${THEME[0]}   ${THEME[4]} ${THEME[5]}   ${THEME[0]}  ${THEME[5]}   ${THEME[0]}  ${THEME[5]}   ${THEME[4]} ${THEME[0]}   ${RESET}
                    ${THEME[0]}  ${THEME[6]} ${THEME[0]}  ${THEME[4]} ${THEME[5]}   ${THEME[0]}  ${THEME[5]}   ${THEME[0]}  ${THEME[5]}   ${THEME[4]} ${THEME[0]}  ${THEME[6]} ${THEME[0]}  ${RESET}
                    ${THEME[0]}     ${THEME[4]} ${THEME[5]}             ${THEME[4]} ${THEME[0]}     ${RESET}
                      ${RESET} ${THEME[0]}    ${THEME[4]} ${THEME[5]}         ${THEME[4]} ${THEME[0]}    ${RESET}
                        ${RESET} ${THEME[0]}  ${THEME[4]} ${THEME[5]}         ${THEME[4]} ${THEME[0]}  ${RESET}
                        ${RESET} ${THEME[0]}  ${THEME[6]}           ${THEME[0]}  ${RESET}
                        ${RESET} ${THEME[0]}  ${THEME[6]}  ${THEME[0]}   ${THEME[6]} ${THEME[0]}   ${THEME[6]}  ${THEME[0]}  ${RESET}
                          ${RESET} ${THEME[0]}  ${THEME[6]}       ${THEME[0]}  ${RESET}
                            ${RESET} ${THEME[0]}       ${RESET}
            ${RESET}
EOF
)

echo
echo "$ATOUM"

LENGTH=${#SAY}
SEP=$(for (( c=1; c<=LENGTH; c++)) ; do printf "-" ; done)

printf "%*s\n" 32 "/"
printf "%*s\n" 31 "/"
printf "%*s\n" 30 "/"
printf "%*s\n" $((($LENGTH+63)/2)) "+-$SEP-+"	
printf "%*s\n" $((($LENGTH+63)/2)) "| $SAY |"
printf "%*s\n" $((($LENGTH+63)/2)) "+-$SEP-+"	
